<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8">
	<title>Шибениця - Граємо</title>
	<link rel="stylesheet" type="text/css" href="stylesheets/style_playground.css">
</head>
<body>
	<section>

		<div class="container">

			<div class="scoreAndButtons">

				<div class="score">
					<div class="victories">
						<p>Перемоги</p>
						<p></p>
					</div>
					<div class="losses">
						<p>Поразки</p>
						<p></p>
					</div>
				</div>

				<div class="buttons">
					<button class="btn playMore">Продовжити!</button>
					<button class="btn reload">Спочатку!</button>
				</div>
				
			</div>

			<div class="hangman">

				<div class="playSymbols">
					<canvas id="gallows" width="300" height="400"></canvas>

					<div class="guessingSymbols">
						<div class="symbolsRight">
							<p><b>Вгадані літери:</b></p>
							<div class="symbolsRightContainer"></div>
						</div>

						<div class="symbolsWrong">
							<p><b>Не вгадані літери:</b></p>
							<div class="symbolsWrongContainer"></div>
						</div>
					</div>

				</div>

				<div class="symbols">
					<p><b>Літери:</b></p>
					<div class="symbolsContainer"></div>
				</div>
			</div>

			<div class="chat">
				<div id="chatWindow">
					<ul></ul>
					<% if (locals.user) { %>
						<form>
							<input id="chatInput" type="text" placeholder="Повідомлення...">
						</form>
					<% } %>
				</div>

				<% include ./partials/login_chat %>

				<div id="openModal" class="modalDialog">
				    <div>	
				    	<a href="#close" title="Close" class="close">X</a>
				    	<form id="loginForm" action="/login">
				    		Логін<br>
				    		<input type="text" name='username'><br>
				    		Пароль<br>
				    		<input type="text" name='password'><br>

				    		<button id="cancel" type="reset"><a href="#close">Відмінити</a></button>
				    		<button type="submit">Увійти</button>
				    	</form>
				    </div>
				</div>

			</div>

		</div>

		<div class="wordContainer">
			<div class="word"></div>
			<div class="wordSecret"><%=word %></div>
		</div>
	</section>

	<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.0.0-alpha1/jquery.js"></script>

	<script src="/socket.io/socket.io.js"></script>
	
	<script type="text/javascript">
		var input = $('#chatInput');
		var ul = $('#chatWindow ul');
		var form = $('#chatWindow form');

		var socket = io.connect(''/* {reconnect: false}*/);

		socket
		.on('message', function (username, message) {
			printMessage(username + "> " + message);
		})
		.on('leave', function (username){
			printStatus(username + " вийшов з чату");
		})
		.on('join', function (username) {
			printStatus(username + " зайшов до чату");
		})
		.on('connect', function() {
			printStatus("З'єднання встановлено");
			form.on('submit', sendMessage);
			input.prop('disabled', false);
		})
		.on('disconnect', function() {
			printStatus("З'єднання втрачено");
			form.off('submit', sendMessage);
			input.prop('disabled', true);
			// setTimeout(reconnect, 500);
		});

		function sendMessage() {
			var text = input.val();
			socket.emit('message', text, function() {
				$('<li>').text("я> " + text).css("color", "#34db2e").appendTo(ul);
				//printMessage("я> " + text);
			});

			input.val('');
			return false;
		}

		function printStatus(status) {
			$('<li>').append($('<i>').text(status)).appendTo(ul);
		}

		function printMessage(text) {
			$('<li>').text(text).appendTo(ul);
		}
	</script>

	<script type="text/javascript">
		function getUserData () {
			$("#loginForm").submit(function () {
				event.preventDefault();

				var $form = $(this);
				var url = $form.attr("action");
				var username = $form.find("input[name='username']").val();
				var password = $form.find("input[name='password']").val();

				var posting = $.post(url, {
					username: username,
					password: password
				});

				posting.done(function (data) {
					window.location.href = "/playground#close";
					window.location.reload();
				})
				.fail(function (data) {
					$( ".failMessage" ).remove();

					var error = $.parseJSON(data.responseText);
					$form.find("input[name='password']").after("<p class='failMessage'>" + error.message + '</p>');
				});
			});
		}

		function logoutUser () {
			$("#logoutForm").submit(function () {
				event.preventDefault();

				var $form = $(this);
				var url = $form.attr("action");

				var posting = $.post(url);

				posting.done(function (data) {
					window.location.href = "/playground";
				})
				.fail(function (data) {
					var error = $.parseJSON(data.responseText);
					$form.html(error.message);
				});
			});

		}

		$(document).ready(function () {
			getUserData();
			logoutUser();
		})
	</script>

	<script type="text/javascript">
		var alphabet = ['а', 'б', 'в', 'г', 'ґ', 'д', 'е', 'є', 'ж', 'з', 'и', 'і', 'ї', 'й', 'к', 'л', 'м', 
			'н', 'о', 'п', 'р', 'с', 'т', 'у', 'ф', 'х', 'ц', 'ч', 'ш', 'щ', 'ь', 'ю', 'я', '\''];
		var counter = 0;

		var wins = 0;
		var losses = 0;

		function generateWord() {
			var el = $(".wordSecret").html();
			el = el.toLowerCase();
			$(".word").empty();

			for (var i = 0; i <= el.length; i++) {
				if ($.inArray(el[i], alphabet) != -1) {
					$('.word').append("<div " + "class=\"" + alphabet.indexOf(el[i]) + "\">_&nbsp;</div>");
				};
			};
		}

		function populateSymbols () {
			$( ".symbolsContainer" ).empty();
			var symbols = '';
			$.each(alphabet, function (i, val) {
				var element = "<div id=\"" + i +"\" class=\"" + "letter\">" + val + "</div>";
				symbols += element;
			})


			$(".symbolsContainer").append(symbols);
		};

		function checkLetter() {
			$('.symbols .letter').click(function () {
				var letter = $(this).html();
				var word = $( '.wordSecret' ).html();

				var indexLetter = word.indexOf(letter);

				if (indexLetter == -1) {
					$(this).appendTo( $( '.symbolsWrongContainer' ) );
					counter += 1;

					switch (counter) {
						case 1:
							drawBasement();
							break;
						case 2:
							drawPole();
							break;
						case 3:
							drawBeam();
							break;
						case 4:
							drawStick();
							break;
						case 5:
							drawHead();
							break;
						case 6:
							drawBody();
							break;
						case 7:
							drawHands();
							break;
						case 8:
							drawLegs();
							$( ".btn" ).css("display", "initial");
							losses += 1;
							addScore();
							break;
					};

					return;
				} else {
					$('.' + alphabet.indexOf(letter)).html(letter);
					$(this).appendTo( $( '.symbolsRightContainer' ) );

					var wordToQuess = $(".word").text();
					var wordSecret = $( ".wordSecret" ).html();

					if (wordToQuess == wordSecret) {
						$( ".btn" ).css("display", "initial");
						wins += 1;
						addScore();
					};

					return;
				}

				return;
			});
		};

		function addScore() {
			$( ".victories p:last-child" ).html(wins);
			$( ".losses p:last-child" ).html(losses);
			return
		};

		function restoreInititalState () {
			$(".symbolsRightContainer, .symbolsWrongContainer, #canvas").empty();
			$( ".btn" ).css("display", "none");
			counter = 0;
			return
		}

		function btnReload () {
			$( ".reload" ).click(function () {
				location.reload();
				return
			});
		};

		function btnPlayMore () {
			$( ".playMore" ).click(function () {
				$.ajax({
					method: "GET",
					url: "http://localhost:3000/playgroundAJAX",
					dataType: "json",
					complete: function (data) {
						var newWord = $.parseJSON(data.responseText);
						$( ".wordSecret" ).html(newWord.word);
						ctx.clearRect(0, 0, canvas.width, canvas.height);
						counter = 0;
						restoreInititalState();

						generateWord();
						populateSymbols();
						checkLetter();
						addScore();
						btnReload();
						btnPlayMore();
					}
				})
			})
		}


		var canvas = document.getElementById('gallows');
		var ctx = canvas.getContext('2d');

		function drawBasement () {
			ctx.strokeStyle = "white";
			ctx.lineWidth = 15;
			ctx.lineCap = 'square';
			ctx.beginPath();
			ctx.moveTo(50, 350);
			ctx.quadraticCurveTo(100, 300, 250, 350);
			ctx.stroke();
		}

		function drawPole () {
			ctx.beginPath();
			ctx.moveTo(100, 329);
			ctx.lineTo(100, 50);
			ctx.stroke();
		}

		function drawBeam () {
			ctx.beginPath();
			ctx.moveTo(50, 50);
			ctx.lineTo(200, 50);
			ctx.stroke();
		}

		function drawStick () {
			ctx.lineCap = 'butt';
			ctx.beginPath();
			ctx.moveTo(200, 50);
			ctx.lineTo(200, 100);
			ctx.stroke();
		}

		function drawHead () {
			ctx.lineWidth = 5;
			ctx.lineCap = 'butt';
			ctx.beginPath();
			ctx.moveTo(228, 128);
			ctx.arc(200, 128, 28, 0*Math.PI, 2*Math.PI);
			ctx.stroke();
		}

		function drawBody () {
			ctx.beginPath();
			ctx.moveTo(200, 156);
			ctx.lineTo(200, 250);
			ctx.stroke();
		}

		function drawHands () {
			ctx.beginPath();
			ctx.moveTo(200, 200);
			ctx.lineTo(250, 150);

			ctx.moveTo(200, 200);
			ctx.lineTo(150, 150);
			ctx.stroke();
		}

		function drawLegs () {
			ctx.beginPath();
			ctx.moveTo(200, 250);
			ctx.lineTo(250, 300);

			ctx.moveTo(200, 250);
			ctx.lineTo(150, 300);
			ctx.stroke();
		}

		$(document).ready(function () {
			generateWord();
			populateSymbols();
			checkLetter();
			addScore();
			btnReload();
			btnPlayMore();

		});
	</script>
</body>
</html>